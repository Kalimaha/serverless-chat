#!/usr/bin/env bash
set -e

stackStatus() {
  aws --profile "$AWS_PROFILE" cloudformation describe-stacks --stack-name "$1"
}

# validate user input
if [[ $# -ne 1 ]]; then
  echo
  echo "Wrong number of parameters. Usage: ./03-create-lambda-infrastructure [test|prod]"
  echo
  exit 1
fi

AWS_OUTPUT=$(aws --profile "$AWS_PROFILE" cloudformation update-stack --stack-name "$LAMBDA_INFRASTRUCTURE_STACK_NAME_PREFIX"-"$1" --template-body file://../infrastructure/lambda-infrastructure/stack.yml --parameters file://../infrastructure/lambda-infrastructure/parameters-"$1".json --region ap-southeast-2 --capabilities CAPABILITY_NAMED_IAM)
STACK_ARN=$(echo "$AWS_OUTPUT" | jq ".StackId")
# shellcheck disable=SC2001
CLEAN_ARN=$(echo "$STACK_ARN" | sed 's/\"//g')
STACK_STATUS=$(stackStatus "$CLEAN_ARN" | jq ".Stacks[0].StackStatus")

echo "STACK ARN........: $CLEAN_ARN"
echo

while [ "$STACK_STATUS" != "$UPDATE_COMPLETE" ] && [ "$STACK_STATUS" != "$UPDATE_ROLLBACK_COMPLETE" ]; do
  echo "CURRENT STATUS...: $STACK_STATUS, WAIT 5s..."
  sleep 5
  STACK_STATUS=$(stackStatus "$CLEAN_ARN" | jq ".Stacks[0].StackStatus")
done

echo
echo "STACK CREATION COMPLETED WITH STATUS: $STACK_STATUS"
echo

WEBSOCKET_ARN=$(stackStatus "$CLEAN_ARN" | jq ".Stacks[0].Outputs[0].OutputValue")
CLEAN_WEBSOCKET_ARN=$(echo "$WEBSOCKET_ARN" | sed 's/\"//g')
echo "Test your connection with:"
echo
echo "   wscat -c wss://$CLEAN_WEBSOCKET_ARN.execute-api.ap-southeast-2.amazonaws.com/test"
echo "   Connected (press CTRL+C to quit)"
echo
echo '   > { "action": "sendmessage", "data": "Hallo, world!" }'
echo
